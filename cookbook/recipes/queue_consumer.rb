#Create the configuration YML
template ::File.join(node[:primero][:app_dir], 'config', 'backburner.yml') do
  source "queue/backburner.yml.erb"
  variables({
    :environments => [ node[:primero][:rails_env] ],
    :url => "beanstalk://#{node[:primero][:queue][:host]}:#{node[:primero][:queue][:port]}"
  })
  owner node[:primero][:app_user]
  group node[:primero][:app_group]
end

log_base_dir = ::File.join(node[:primero][:log_dir], 'backburner')
directory log_base_dir do
  action :create
  mode '0700'
  owner node[:primero][:app_user]
  group node[:primero][:app_group]
end

backburner_worker_file = "#{node[:primero][:daemons_dir]}/backburner-worker.sh"

file backburner_worker_file do
  mode '0755'
  owner node[:primero][:app_user]
  group node[:primero][:app_group]
  content <<-EOH
#!/bin/bash
#Launch the Backburner worker for consuming events from the Beanstalkd queue
#This file is generated by Chef
source #{::File.join(node[:primero][:home_dir],'.rvm','scripts','rvm')}
QUEUE=#{node[:primero][:queue][:queue_list]} RAILS_ENV=#{node[:primero][:rails_env]} bundle exec rake backburner:work
EOH
end

template '/etc/systemd/system/backburner.service' do
  source 'queue/backburner.service.erb'
end

execute 'Reload Systemd' do
  command 'systemctl daemon-reload'
end

execute 'Enable Backburner' do
  command 'systemctl enable backburner.service'
end

execute 'Restart Backburner' do
  command 'systemctl restart backburner'
end