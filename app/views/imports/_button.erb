<% if can?(:import, controller.model_class) %>
  <% active_importers = (defined? importers) ? importers : Importers::ACTIVE_IMPORTERS %>
  <li>
    <a data-open="import-modal">
      <%=(defined? import_label) ? t(import_label) : t("buttons.import") %>
    </a>

    <div id="import-modal" class="reveal tiny" data-reveal>
      <%= render 'shared/modal_close' %>
      <%= form_tag(url_for(:action => 'import_file'), {:multipart => true, :method => 'post', :autocomplete => "off"}) do %>
        <%= file_field_tag("import_file") %>
        <label><%=I18n.t("imports.password_label")%>
          <%= password_field_tag "password" %>
        </label>
        <label><%=I18n.t("imports.format_label")%>
          <%= select_tag("import_type", options_for_select(active_importers.map {|i| [i.display_name, i.id]}, 'csv')) %>
        </label>
        <div class="row align-right">
          <div class="button-group">
            <%= submit_tag(t("buttons.import"), class: 'button hollow right') %>
          </div>
        </div>
        <%= content_for :page_scripts do %>
          var $import_type = $("#import_type");
          if ($import_type.find("option[value='guess']").length == 0) {
            $import_type.append(new Option('<%=I18n.t('imports.guess_file_type_option')%>', 'guess'));
          }
          function import_file(e) {
            var ext_stack = e.target.value.split('.');
            var selected_option = [];
            do {
              var file_ext = ext_stack.pop();
              selected_option = $import_type
                .children('option')
                .filter(function(i, el) { return el.value == file_ext })
                .prop('selected', true);
            } while (selected_option.length == 0 && ext_stack.length > 0);
          }
          $('#import_file').on('change', import_file);
        <% end %>
      <% end %>
    </div>
  </li>
<% end %>
