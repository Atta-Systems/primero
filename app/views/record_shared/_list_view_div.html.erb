<%
  #TODO: As usual there is a good way to structure this more elegantly.
  #       We should be using the inherited content_for code to handle rendering in these areas.
  opts ||= {}
  display_create = model.to_s == "PotentialMatch" ? false : true
  options = {
      display_filter: false,
      display_actions: model.to_s =="PotentialMatch" ? false : true,
      display_create: display_create}.merge(opts)
%>
<div class="index_controls_container" data-top="50" data-bottom="40">
  <div class="row collapse">
    <div class="large-9 small-9 columns">
      <div class="row collapse">
        <div class="large-6 small-6 columns">
          <%= render partial: "record_shared/header",
                     locals: {
                         model: model, record: record, modules: @current_modules,
                         display_actions: options[:display_actions],
                         display_create: options[:display_create]
                     }
          %>
        </div>
      </div>
    </div>
    <div class="large-3 small-3 columns">
      <% if options[:display_filter] %>
          <div class="filter_title left">
            <%= t("buttons.filter_label") %><br>
            <a class="clear_filters"><%= icon('close') %> <%= t('buttons.filter_clear') %></a>
          </div>
          <%= link_to t("buttons.filter"),'', class: 'green-button right', id: 'apply_filter' %>
      <% end %>
    </div>
  </div>
</div>
<div class="row collapse">
  <div class="large-9 small-9 columns">
    <div class="clearfix"></div>
      <%= render :partial => "#{controller.controller_name}/summary_row", collection: collection, as: :record %>
  </div>
  <!--<div class="large-3 small-3 columns index_filters">-->
    <!--<%= render "#{controller.controller_name}/filter", filters_to_show: index_filters_to_show(record) %>-->
  <!--</div>-->
</div>
